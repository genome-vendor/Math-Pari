# Makefile for gp on DOS with emx/gcc

# Change these installation directories to suit your needs

PREFIX = /usr/local
LIBDIR = $(PREFIX)/lib
BINDIR = $(PREFIX)/bin
MANDIR = $(PREFIX)/man
INCLUDEDIR = $(PREFIX)/include/pari

CC = gcc
CFLAGS = -O -DNOEXP2 $(PIC)
VERSIONCFLAGS = 
LIBS = -lm 
LFLAGS =
STATIC_LIBS = 
DYNAMIC_LIBS = -lc

# Additional flags to enable C++ compile (like '-x c++')

CPlPl = 

# This is the flag needed for dynamic loading

#PIC = -???

# If linking statically no flag is needed (this gives - very small - speedup)

PIC =

# You can (if you want to debug gp yourself) add the -g option
# in CFLAGS. However, remember that, while gcc accepts -g and -O
# simultaneously, cc usually does not.

# Whether we have assembler routines:  -D__HAS_NO_ASM__ or empty:
NOASM = 

LD = ld
RM = del
LN = copy
RANLIB = ranlib
INSTALL = copy
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)

# Choose the plot file:

# no plotting capabilities:
PLOTFILE = plotnull.c
PLOTCFLAGS =
PLOTLIBS =

# plotting in X windows:
#PLOTFILE = plotX.c
#PLOTCFLAGS = -I/usr/openwin/share/include
#PLOTLIBS =  -lX11

# plotting in Gnuplot windows:
#PLOTFILE = plotgnuplot.c
#PLOTCFLAGS = -I$(GNUPLOT_DIR)
#PLOTLIBS = libgnuplot.a
#PLOTBUILD = libgnuplot.a

# Choose whether you want the readline input facilities:

# This is good (bad?) if you have no readline
#RLLIBS =
#RLFLAGS =
#MORECFLAGS =

# This is good if you have old readline version nearby
#	You may need to edit some locations below. Comment first declaration
#	if you have libreadline.a compiled.
RLLIBS = ../readline/libreadline.a
RLFLAGS = -L../readline -lreadline -ltermcap
MORECFLAGS = -DREADLINE -I.. -DHAS_STRICMP

# This is good if you have readline version 2.0 or later, already installed:
#	You may need to edit some locations below.
#RLLIBS = 
#RLFLAGS = -L/opt/gnu/lib -lreadline -ltermcap
#MORECFLAGS = -DREADLINE2 -I/opt/gnu/include -DHAS_STRICMP

# This should be the location of gnuplot 3.5 files
GNUPLOT_DIR = ..\..\gnuplot

OBJS = i386.o mp.o anal.o alglin1.o alglin2.o base1.o base2.o base3.o arith1.o arith2.o bibli1.o bibli2.o elliptic.o es.o gen1.o gen2.o gen3.o init.o errmessages.o helpmessages.o polarit1.o polarit2.o trans1.o trans2.o trans3.o buch1.o buch2.o version.o gp_rl.o plotport.o

GNUPLOTOBJS =	$(GNUPLOT_DIR)/term.o $(GNUPLOT_DIR)/bitmap.o 		$(GNUPLOT_DIR)/util.o $(GNUPLOT_DIR)/version.o

SRCS =  mp.c mpin.c anal.c alglin1.c alglin2.c base1.c base2.c base3.c arith1.c arith2.c bibli1.c bibli2.c elliptic.c es.c gen1.c gen2.c gen3.c init.c errmessages.c helpmessages.c polarit1.c polarit2.c trans1.c trans2.c trans3.c buch1.c buch2.c gp_rl.c version386.c plotport.c

all:	genpari.h gp.exe

gp.exe:	genpari.h gp.o $(OBJS) plot.o $(RLLIBS) $(PLOTBUILD)
	-$(RM) gp1.o
	-$(RM) gp2.o
	-$(RM) gp3.o
	-$(RM) gp4.o
	-$(RM) gp5.o
	$(LD) -o gp1.o -r mp.o i386.o anal.o alglin1.o alglin2.o base1.o base2.o base3.o
	$(LD) -o gp2.o -r arith1.o arith2.o bibli1.o bibli2.o elliptic.o es.o
	$(LD) -o gp3.o -r gen1.o gen2.o gen3.o init.o errmessages.o helpmessages.o
	$(LD) -o gp4.o -r polarit1.o polarit2.o trans1.o trans2.o trans3.o version.o
	$(LD) -o gp5.o -r buch1.o buch2.o gp_rl.o plotport.o
	$(CC) -o gp.exe gp.o gp1.o gp2.o gp3.o gp4.o gp5.o plot.o $(LIBS) $(STATIC_LIBS) $(PLOTLIBS) $(RLFLAGS)
	-$(RM) gp1.o
	-$(RM) gp2.o
	-$(RM) gp3.o
	-$(RM) gp4.o
	-$(RM) gp5.o

#gp.exe:	gp
#	emxbind -q c:\emx\bin\emx.exe gp gp.exe

genpari.h:	genpariother.h
	-$(RM) genpari.h
	$(LN) genpariother.h genpari.h

mp.o:	mp.c
	$(CC) $(CFLAGS) $(CPlPl) $(NOASM) -c mp.c

i386.o:	i386.s
	$(CC) $(CFLAGS) -c i386.s

i386.s:	i386.c
	$(CC) -E i386.c > i386.s

alglin1.o: alglin1.c
	$(CC) $(CFLAGS) $(CPlPl) -c alglin1.c

alglin2.o: alglin2.c
	$(CC) $(CFLAGS) $(CPlPl) -c alglin2.c

anal.o: anal.c
	$(CC) $(CFLAGS) $(CPlPl) -c anal.c

arith1.o: arith1.c
	$(CC) $(CFLAGS) $(CPlPl) -c arith1.c

arith2.o: arith2.c
	$(CC) $(CFLAGS) $(CPlPl) -c arith2.c

base1.o: base1.c
	$(CC) $(CFLAGS) $(CPlPl) -c base1.c

base2.o: base2.c
	$(CC) $(CFLAGS) $(CPlPl) -c base2.c

base3.o: base3.c
	$(CC) $(CFLAGS) $(CPlPl) -c base3.c

buch1.o: buch1.c
	$(CC) $(CFLAGS) $(CPlPl) -c buch1.c

buch2.o: buch2.c
	$(CC) $(CFLAGS) $(CPlPl) -c buch2.c

bibli1.o: bibli1.c
	$(CC) $(CFLAGS) $(CPlPl) -c bibli1.c

bibli2.o: bibli2.c
	$(CC) $(CFLAGS) $(CPlPl) -c bibli2.c

elliptic.o: elliptic.c
	$(CC) $(CFLAGS) $(CPlPl) -c elliptic.c

es.o: es.c
	$(CC) $(CFLAGS) $(CPlPl) -c es.c

gen1.o: gen1.c
	$(CC) $(CFLAGS) $(CPlPl) -c gen1.c

gen2.o: gen2.c
	$(CC) $(CFLAGS) $(CPlPl) -c gen2.c

gen3.o: gen3.c
	$(CC) $(CFLAGS) $(CPlPl) -c gen3.c

init.o: init.c
	$(CC) $(CFLAGS) $(CPlPl) -c init.c

errmessages.o: errmessages.c
	$(CC) $(CFLAGS) $(CPlPl) -c errmessages.c

helpmessages.o: helpmessages.c
	$(CC) $(CFLAGS) $(CPlPl) -c helpmessages.c

dummy.o: dummy.c
	$(CC) $(CFLAGS) $(CPlPl) -c dummy.c

polarit1.o: polarit1.c
	$(CC) $(CFLAGS) $(CPlPl) -c polarit1.c

polarit2.o: polarit2.c
	$(CC) $(CFLAGS) $(CPlPl) -c polarit2.c

trans1.o: trans1.c
	$(CC) $(CFLAGS) $(CPlPl) -c trans1.c

trans2.o: trans2.c
	$(CC) $(CFLAGS) $(CPlPl) -c trans2.c

trans3.o: trans3.c
	$(CC) $(CFLAGS) $(CPlPl) -c trans3.c

plotport.o: plotport.c
	$(CC) $(CFLAGS) $(CPlPl) -c plotport.c

gp.o: gp.c
	$(CC) $(CFLAGS) $(CPlPl) $(MORECFLAGS) -c gp.c

gp_rl.o: gp_rl.c
	$(CC) $(VERSIONCFLAGS) $(CPlPl) $(MORECFLAGS) -c gp_rl.c

plot.c:	$(PLOTFILE)
	-$(RM) plot.c
	$(LN) $(PLOTFILE) plot.c

plot.o:	plot.c
	$(CC) $(CFLAGS) $(CPlPl) $(PLOTCFLAGS) -c plot.c

libgnuplot.a: $(GNUPLOTOBJS)
	ar r $@ $(GNUPLOTOBJS)

$(GNUPLOTOBJS) :
	cd $(GNUPLOT_DIR); make $@

version.o:	version386.c
	$(CC) $(VERSIONCFLAGS) $(CPlPl) $(NOASM) -c -o version.o version386.c

../readline/Makefile:
	(cd ../readline ; CC='$(CC)' ; export CC ; CFLAGS='$(CFLAGS)' ; export CFLAGS ; configure)

../readline/libreadline.a: ../readline/Makefile
	(cd ../readline ; make CC='$(CC)' CFLAGS='$(CFLAGS)')

install: install-lib install-bin install-man

install-lib: $(OBJS) dummy.o
	-mkdir $(INCLUDEDIR)
	$(INSTALL_DATA) genpari.h $(INCLUDEDIR)
	$(INSTALL_DATA) gencom.h  $(INCLUDEDIR)
	$(INSTALL_DATA) genport.h $(INCLUDEDIR)
	$(INSTALL_DATA) gen68k.h $(INCLUDEDIR)
	$(INSTALL_DATA) erreurs.h $(INCLUDEDIR)
	$(INSTALL_DATA) mpansi.h $(INCLUDEDIR)
	$(INSTALL_DATA) mpdefs.h $(INCLUDEDIR)
	$(INSTALL_DATA) mpin.h $(INCLUDEDIR)
	-$(RM) libpari.a
	ar r libpari.a $(OBJS) dummy.o
	$(INSTALL_DATA) libpari.a $(LIBDIR)
	$(RANLIB) $(LIBDIR)/libpari.a

install-bin: gp.exe
	$(INSTALL_PROGRAM) gp.exe $(BINDIR)
	strip $(BINDIR)/gp

install-man: gp.1
	$(INSTALL_DATA) gp.1 $(MANDIR)/man1

clean:	testclean
	-$(RM) *.o libpari.a gp.exe genpari.h plot.c i386.s sparcv8.s _sparcv8.s $(PARISO)

realclean:	clean
	-$(RM) *~ *.orig *.rej *.old

testclean:	
	-$(RM) testout.* 

test: testout.filtered
	@ if [ -z "`cat testout.filtered`" ] ; then echo OK ; 		else echo not OK; cat testout.diff; fi

testout.test: gp.exe testin
	./gp <testin > $@ 2>&1

testout.diff: testouts testout.test
	@ -diff testouts testout.test > $@

testout.filtered: testout.diff
	@ -grep -v "^[0-9-]" testout.diff | egrep -iv "Total time|version" > $@

depend: genpari.h
	makedepend -- $(CFLAGS) -- $(SRCS)
