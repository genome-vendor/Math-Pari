Only in pari-2.0.15.beta: 0000p
diff -pru old-pari-2.0.15.beta/Configure pari-2.0.15.beta/Configure
--- old-pari-2.0.15.beta/Configure	Fri Jun  4 20:00:18 1999
+++ pari-2.0.15.beta/Configure	Fri Jun  4 20:01:43 1999
@@ -820,7 +820,7 @@ fi
 if test "$gnuas" = yes; then
   echo "...Hum, this looks like GNU as"
   case "$osname-$asmarch" in
-    solaris-sparc*) KERNELCPPFLAGS="-DNO_UNDERSCORE";;
+    solaris-sparc*) KERNELCPPFLAGS="-DNO_UNDERSCORE $__GNUC__";;
   esac
 else
   case "$osname-$asmarch" in
Only in pari-2.0.15.beta: Configure.orig
diff -pru old-pari-2.0.15.beta/config/Makefile.SH pari-2.0.15.beta/config/Makefile.SH
--- old-pari-2.0.15.beta/config/Makefile.SH	Fri Jun  4 20:00:13 1999
+++ pari-2.0.15.beta/config/Makefile.SH	Fri Jun  4 20:01:43 1999
@@ -113,6 +113,7 @@ if test -z "$DLLD"; then
 else
   exec="gp-sta gp-dyn"
 fi
+doexec="env LD_LIBRARY_PATH=  $src/test/dotest $sizeof_long"
 if test -z "$emacs"; then
   install_emacs_files=
   pari_elc=
@@ -245,13 +246,13 @@ cleantest:
 	\$(RM) out.* pari.ps
 
 dobench::
-	@$src/test/dotest $sizeof_long
+	@$doexec
 dotest::
-	@$src/test/dotest $sizeof_long -a
+	@$doexec -a
 dotest-compat::
-	@$src/test/dotest $sizeof_long -c
+	@$doexec -c
 dotest-graphic::
-	@$src/test/dotest $sizeof_long -g
+	@$doexec -g
 
 clean: cleantest
 	-\$(RM) *.o *.s pariinl.h libpari.* $exec
@@ -259,7 +260,7 @@ clean: cleantest
 .headers: $HEADERS
 	@touch \$@
 
-install: install-lib-$dft install-include install-bin install-man install-misc install-data
+install: install-lib-$dft install-include install-bin install-man install-misc install-data install-doc
 
 install-include:
 	-mkdir -p \$(INCLUDEDIR)
Only in pari-2.0.15.beta/config: Makefile.SH.orig
diff -pru old-pari-2.0.15.beta/src/headers/paricom.h pari-2.0.15.beta/src/headers/paricom.h
--- old-pari-2.0.15.beta/src/headers/paricom.h	Fri Jun  4 20:00:06 1999
+++ pari-2.0.15.beta/src/headers/paricom.h	Fri Jun  4 20:01:43 1999
@@ -13,6 +13,7 @@
 #define GSTR(x) ((char*) (((GEN) (x)) + 1 ))
 
 /* For compatibility with 1.x.x */
+#define err pari_err /* move to e.g paritr.h ? */
 #define init pari_init
 #define gen2str GENtostr
 #define gpui gpow
Only in pari-2.0.15.beta/src/headers: paricom.h.orig
diff -pru old-pari-2.0.15.beta/src/kernel/alpha/level0.s pari-2.0.15.beta/src/kernel/alpha/level0.s
--- old-pari-2.0.15.beta/src/kernel/alpha/level0.s	Fri Jun  4 19:59:58 1999
+++ pari-2.0.15.beta/src/kernel/alpha/level0.s	Fri Jun  4 20:01:43 1999
@@ -153,7 +153,7 @@ addmul:	
 		
  # This program is a modification of a file contained in the gmp-1.9
  # library, copyright Free Software Foundation, with permission.
-	.globl	err
+	.globl	pari_err
         .set noreorder
         .align 3
         .globl divll
@@ -278,7 +278,7 @@ LLp7:
 
 errorhandler:
 	ldiq	$16,0x2f
-	jmp	err
+	jmp	pari_err
 	
 	.end	divll
 
Only in pari-2.0.15.beta/src/kernel/alpha: level0.s.orig
diff -pru old-pari-2.0.15.beta/src/kernel/m68k/mp.s pari-2.0.15.beta/src/kernel/m68k/mp.s
--- old-pari-2.0.15.beta/src/kernel/m68k/mp.s	Fri Jun  4 19:59:59 1999
+++ pari-2.0.15.beta/src/kernel/m68k/mp.s	Fri Jun  4 20:01:43 1999
@@ -250,7 +250,7 @@ getr:   movl    d1,sp@-
                                 | nettoyage pile PARI
                                 | a ecrire .....!!!!!!!!!
 mnet:   movl    #errpile,sp@-
-        jsr     _err
+        jsr     _pari_err
 
 #===================================================================#
 #                                                                   #
@@ -330,7 +330,7 @@ _affsi: link    a6,#0
         beq     4$
                                 | ici s2 <> 0 (erreur)
         movl    #affer1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici s2 = 0 ou l1 >= 3
 1$:     tstl    d0
 4$:     bmi     2$
@@ -367,7 +367,7 @@ _affii: link    a6,#0
         bcc     1$
                                 | ici le2 > l1 (erreur)
         movl    #affer3,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici le2 <= l1
 1$:     movw    a1@(6),d0       | d0.w contient le2
         subqw   #2,d0           | d0.w contient L2
@@ -390,7 +390,7 @@ _itos:  movl    a1,sp@-
         bls     1$
                                 | ici l2 >= 4 (erreur)
         movl    #affer2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici l2 <= 3
 1$:     beq     2$
                                 | ici l2 = 2 (i2 = 0)
@@ -403,7 +403,7 @@ _itos:  movl    a1,sp@-
         beq     4$
                                 | ici |i2| > 2^31 (erreur)
 5$:     movl    #affer2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici |i2| = 2^31
 4$:     tstb    a1@(4)
         bpl     5$              | si i2 = 2^31 erreur
@@ -601,14 +601,14 @@ affrrf: moveml  sp@+,d0-d1/a0-a1
                                 | affectation r2 --> s1
 
 _affrs: movl    #affer4,sp@-
-        jsr     _err
+        jsr     _pari_err
 
 #-------------------------------------------------------------------#
 
                                 | affectation r2 --> i1
 
 _affri: movl    #affer5,sp@-
-        jsr     _err
+        jsr     _pari_err
 
 
 #*******************************************************************#
@@ -861,7 +861,7 @@ _shifti:link    a6,#0
         bcs     4$
                                 | ici debordement
 18$:    movl    #shier1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici k = 1 et i2 <> 0
 4$:     bsr     geti
         movl    a0,a3           | sauvegarde adresse resultat
@@ -1039,7 +1039,7 @@ _shiftr:link    a6,#0
         bvc     sh
                                 | ici debordement
 shier:  movl    #shier2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici k + fexp2 <= 2^31 -1
 sh:     cmpl    #0x1000000,d1
         bcc     shier           | si k + fexp2 >= 2^24
@@ -1120,7 +1120,7 @@ _mptrunc:link   a6,#0
         bls     2$
                                 | ici le(i1)> 2^15 : erreur
         movl    #truer1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici le(i1)<=2^15
 2$:     bsr     geti            | allocation q+3 longs mots pour i1
         movl    a0,a4
@@ -1134,7 +1134,7 @@ _mptrunc:link   a6,#0
         bpl     3$
                                 | ici l(r1)<le(i1) : erreur
         movl    #truer2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici l(r1)>=le(i1)
 3$:     subqw   #3,d0           | d0.w contient l(i1)-1 (compteur)
         addqb   #1,d2           | d2.b contient exp1+1 (derniers bits)
@@ -1952,7 +1952,7 @@ _addsi: link    a6,#0
         bls     7$
                                 | ici debordement
         movl    #adder1,sp@-
-        jsr     _err
+        jsr     _pari_err
 7$:     movw    a0@(2),a0@(6)   | mise longueur effective
 	movw    a1@(4),a0@(4)   | signe du resultat
         movl    #1,a0@(8)       | mise a jour retenue finale
@@ -2089,7 +2089,7 @@ _addii: link    a6,#0
         bcs     10$
                                 | ici debordement
         movl    #adder2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici demander 1 long mot en plus
 10$:    moveq   #1,d0
         bsr     geti
@@ -2309,7 +2309,7 @@ _addir: link    a6,#-4          | var. l
         bcs     7$
                                 | ici debordement
 2$:     movl    #adder3,sp@-
-        jsr     _err
+        jsr     _pari_err
 addirf: movl    a6@(-4),d0      | d0 pointe sur resultat
         moveml  sp@+,d2-d3/a2
         unlk    a6
@@ -2572,7 +2572,7 @@ _addrr: link    a6,#-16
         blt     2$
                                 | ici fexp>=2^24 : erreur
         movl    #adder4,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici non debordement
 2$:     cmpb    #2,a6@(-4)
         beq     13$
@@ -2620,12 +2620,12 @@ surr:   moveq   #0,d6
         addl    a6@(-16),d2     | ajouter e1 biaise
         bpl     15$
         movl    #adder5,sp@-    | underflow dans R+R
-        jsr     _err
+        jsr     _pari_err
 15$:    cmpl    #0x1000000,d2
         blt     16$
                                 | ici fexp>=2^24 : erreur overflow dans R+R
         movl    #adder4,sp@-
-        jsr     _err
+        jsr     _pari_err
 16$:    bsr     giv
         moveq   #3,d0
         bsr     getr
@@ -3211,7 +3211,7 @@ _mulsi: link    a6,#0
         bvc     4$
                                 | ici debordement
         movl    #muler3,sp@-
-        jsr     _err
+        jsr     _pari_err
 4$:     movw    d0,a0@(2)       | mise longueur
         movl    d5,a0@(8)       | mise retenue
 5$:     movw    a0@(2),a0@(6)   | mise le(i0)
@@ -3327,7 +3327,7 @@ _mulsr: link    a6,#-4
         beq     9$
                                 | ici debordement
 11$:    movl    #muler2,sp@-
-        jsr     _err
+        jsr     _pari_err
 9$:     movw    d0,a0@(6)       | mise exposant
         swap    d0
         movb    d0,a0@(5)
@@ -3367,7 +3367,7 @@ _asmmulii: link    a6,#0
         addw    d1,d0           | d0 recoit l2 + L1 = L1 + L2 + 2
         bvc     3$
         movl    #muler1,sp@-
-        jsr     _err            | debordement
+        jsr     _pari_err            | debordement
         bra     6$
 3$:     bsr     geti            | allocation memoire pour resultat
         movw    d0,a0@(6)       | met long effect. (peut-etre 1 de trop)
@@ -3469,11 +3469,11 @@ muzr:   moveq   #3,d0
         cmpl    #0x1000000,d1
         bcs     1$
         movl    #muler4,sp@-    | debordement r*r
-        jsr     _err
+        jsr     _pari_err
 1$:     tstl    d1
         bgt     2$
         movl    #muler5,sp@-    | underflow r*r
-        jsr     _err
+        jsr     _pari_err
 2$:     movl    d1,a0@(4)
         clrl    a0@(8)
         bra     mulrrf
@@ -3570,11 +3570,11 @@ bint:   movl	d7,d6		| sauvegarder nouvel
 2$:     cmpl    #0x1000000,d1
         bcs     3$
         movl    #muler4,sp@-    | debordement r*r
-        jsr     _err
+        jsr     _pari_err
 3$:     tstl    d1
         bgt     4$
         movl    #muler5,sp@-    | underflow r*r
-        jsr     _err
+        jsr     _pari_err
 4$:     movl    d1,a4@-         | range exposant
         movb    a1@(-4),d1
         movb    a2@(-4),d2      | signes
@@ -3618,7 +3618,7 @@ _mulir: link    a6,#-20
         cmpl    #0x1000000,d0
         bcs     3$
         movl    #muler6,sp@-    | overflow I*R, R = 0
-        jsr     _err
+        jsr     _pari_err
 3$:     movl    d0,a0@(4)
         clrl    a0@(8)
         movl    a0,d0
@@ -3826,7 +3826,7 @@ _asmdvmdii:link    a6,#-32
         bne     dv1
                                 | ici i1 = 0
         movl    #dvmer1,sp@-
-dvmerr: jsr     _err
+dvmerr: jsr     _pari_err
                                 | ici i1 <> 0
 dv1:    movl    a6@(8),a2       | a2 pointe sur dividende i2
         movw    a2@(6),d2       | d2.w contient le2
@@ -4263,7 +4263,7 @@ _mpdivz:movl    a2,sp@-
         beq     2$
                                 | ici T3 = I et (T2 = R ou T1 = R)
 3$:     movl    #divzer1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici T3 = I et T2 = I
 2$:     cmpb    #1,a0@
         bne     3$
@@ -4532,7 +4532,7 @@ _divss: link    a6,#0
         bne     1$
                                 | ici s1 = 0
         movl    #diver1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici s1 <> 0
 1$:     movl    a6@(8),d2       | d2.l recoit s2
 	bpl	9$
@@ -4576,7 +4576,7 @@ _divsi: link    a6,#0
         bne     1$
                                 | ici i1 = 0
         movl    #diver2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici i1 <> 0
 1$:     movl    a6@(8),d2       | d2.l contient le dividende s2
         bne     3$
@@ -4634,7 +4634,7 @@ _divsr: link    a6,#-32
         bne     2$
                                 | ici r1 = 0
         movl    #diver3,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici r1 <> 0
 2$:     tstl    a6@(8)
         bne     1$
@@ -4679,7 +4679,7 @@ _divis: link    a6,#0
         movl    a6@(12),d1      | d1 recoit s1 diviseur
         bne     1$
         movl    #diver4,sp@-
-        jsr     _err
+        jsr     _pari_err
 1$:     bpl     2$
         negl    d1
                                 | ici d1 contient |s1|
@@ -4769,7 +4769,7 @@ _divir: link    a6,#-32         | var. l
         bne     1$
                                 | ici r1 = 0
         movl    #diver5,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici r1 <> 0
 1$:     movl    a6@(8),a2       | a2 pointe sur i2
         tstb    a2@(4)
@@ -4814,7 +4814,7 @@ _divrs: link    a6,#0
         bne     1$
                                 | ici s1 = 0
         movl    #diver6,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici diviseur s1 <> 0
 1$:     movl    a6@(8),a2       | a2 pointe sur r2 dividende
         tstb    a2@(4)
@@ -4890,7 +4890,7 @@ _divrs: link    a6,#0
         bpl     8$
                                 | ici underflow
 9$:     movl    #diver7,sp@-
-        jsr     _err
+        jsr     _pari_err
 8$:     movw    d2,a0@(6)
         swap    d2
         movb    d2,a0@(5)       | range exposant
@@ -4917,7 +4917,7 @@ _divri: link    a6,#-32         | var. l
         bne     1$
                                 | ici i1 = 0
         movl    #diver8,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici i1 <> 0
 1$:     movl    a6@(8),a2       | a2 pointe sur le dividende r2
         tstb    a2@(4)
@@ -4933,7 +4933,7 @@ _divri: link    a6,#-32         | var. l
         subl    d0,d1
         bpl     3$
         movl    #diver12,sp@-   | underflow R/I avec R = 0
-        jsr     _err
+        jsr     _pari_err
 3$:     movl    d1,a0@(4)
         clrl    a0@(8)
         movl    a0,d0
@@ -4983,7 +4983,7 @@ _divrr: link    a6,#-32         | var. l
         bne     1$
                                 | ici r1 = 0
         movl    #diver9,sp@-
-        jsr     _err
+        jsr     _pari_err
 1$:     tstb    a2@(4)          | r2 = 0 ?
         bne     3$
                                 | ici r2=0, r1<>0 : resultat nul
@@ -4997,11 +4997,11 @@ _divrr: link    a6,#-32         | var. l
         cmpl    #0x1000000,d0
         bcs     4$
         movl    #diver11,sp@-   | debordement r/r
-        jsr     _err
+        jsr     _pari_err
 4$:     tstl    d0
         bgt     5$
         movl    #diver10,sp@-   | underflow r/r
-        jsr     _err
+        jsr     _pari_err
 5$:     movl    d0,a0@(4)
         clrl    a0@(8)
         bra     divrrf
@@ -5197,10 +5197,10 @@ bcdf:   dbra    d7,dext         | fin de
 comd2:  cmpl    #0x1000000,d0
         ble     3$
         movl    #diver10,sp@-   | underflow
-        jsr     _err
+        jsr     _pari_err
 3$:     bcs     4$
         movl    #diver11,sp@-   | overflow
-        jsr     _err
+        jsr     _pari_err
 4$:     movl    d0,a0@(4)       | range exposant
         movb    a6@(-2),a0@(4)  | range signe
         moveml  sp@+,d2-d7/a2-a4
@@ -5314,7 +5314,7 @@ _modss: link    a6,#0
         bne     1$
                                 | ici s1 = 0
         movl    #moder1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici s1 <> 0
 1$:     movl    a6@(8),d2       | d2.l contient s2
 	bpl	9$
@@ -5560,7 +5560,7 @@ _resss: link    a6,#0
         bne     1$
                                 | ici s1 = 0
         movl    #reser1,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | ici s1 <> 0
 1$:     movl    a6@(8),d2       | d2.l contient s2
 	bpl	9$
@@ -5698,14 +5698,14 @@ mpariz: movb    sp@(12)@,d0
         cmpb    #3,d0
         beq     mpopz
         movl    #arier1,sp@-
-        jsr     _err
+        jsr     _pari_err
 
                                 | le troisieme operande est de type I
 
 mpopi:  cmpb    #1,sp@(12)@
         beq     mpopz
         movl    #arier2,sp@-
-        jsr     _err
+        jsr     _pari_err
                                 | operation quelconque
 
 mpopz:  movl    sp@(8),sp@-     | 2eme operande
@@ -5726,7 +5726,7 @@ mpopii: movb    sp@(16)@,d0
         cmpb    #2,d0
         beq     mpopz2
         movl    #arier2,sp@-
-        jsr     _err
+        jsr     _pari_err
 
                                 | operation a quatre operande
 
Only in pari-2.0.15.beta/src/kernel/none: mp.c.orig
diff -pru old-pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_micro.S pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_micro.S
--- old-pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_micro.S	Fri Jun  4 20:00:00 1999
+++ pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_micro.S	Fri Jun  4 20:01:44 1999
@@ -93,7 +93,7 @@ C(divll): sethi	%hi(C(hiremainder)),%o4
 	bvc	1f
 	umul	%o0,%o1,%o5
 	mov	0x2f,%o0
-	call	C(err),1
+	call	C(pari_err),1
 	nop
 #ifdef __GNUC__
 1:	retl
Only in pari-2.0.15.beta/src/kernel/sparcv8: level0_sparcv8_micro.S.orig
diff -pru old-pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_super.S pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_super.S
--- old-pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_super.S	Fri Jun  4 20:00:00 1999
+++ pari-2.0.15.beta/src/kernel/sparcv8/level0_sparcv8_super.S	Fri Jun  4 20:01:44 1999
@@ -103,7 +103,7 @@ C(divll): LOAD_HI(%o2)
 	bvc	1f
 	umul	%o0,%o1,%o5
 	mov	0x2f,%o0
-	call	C(err),1
+	call	C(pari_err),1
 	nop
 1:	subcc	%o3,%o5,%o2
 	retl
@@ -126,7 +126,7 @@ C(divlllong):
 	blu	1f
 	addcc	%o1,%o1,%g0
 	mov	0x2f,%o0
-	call	C(err),1
+	call	C(pari_err),1
 	nop
 1:	bcc	Lsmalldiv
 	andcc	%o1,1,%g0
Only in pari-2.0.15.beta/src/kernel/sparcv8: level0_sparcv8_super.S.orig
